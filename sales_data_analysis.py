# -*- coding: utf-8 -*-
"""Sales Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OGTx7huJj3ZRbNwWL_WClQjj8M06-Iny
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

sales_data = pd.read_csv("/content/ECOMM DATA.xlsx - Orders.csv")

sales_data.head()

# Convert 'Order Date' to datetime format for time series analysis
sales_data['Order Date'] = pd.to_datetime(sales_data['Order Date'], format='%d/%m/%Y')

# Total Sales Calculation
total_sales = sales_data['Sales'].sum()
print(f'Total Sales: ${total_sales:.2f}')

# Extract month and year from 'Order Date' for trend analysis
sales_data['Year'] = sales_data['Order Date'].dt.year
sales_data['Month'] = sales_data['Order Date'].dt.to_period('M')

# Aggregate sales by year and month
monthly_sales = sales_data.groupby('Month')['Sales'].sum()
yearly_sales = sales_data.groupby('Year')['Sales'].sum()

# Plot Monthly Sales Trend
plt.figure(figsize=(12, 6))
monthly_sales.plot()
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.show()

# Plot Monthly Sales Trend
plt.figure(figsize=(12, 6))
monthly_sales.plot()
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.show()

# Aggregate sales and quantity by product
product_sales = sales_data.groupby('Product Name').agg({'Sales': 'sum', 'Quantity': 'sum'}).sort_values(by='Sales', ascending=False)

# Top 5 Best-Selling Products by Sales
top_5_products_by_sales = product_sales.head(5)
print('Top 5 Best-Selling Products by Sales:')
print(top_5_products_by_sales)

# Top 5 Best-Selling Products by Quantity
top_5_products_by_quantity = product_sales.sort_values(by='Quantity', ascending=False).head(5)
print('Top 5 Best-Selling Products by Quantity:')
print(top_5_products_by_quantity)

# Plot Top 5 Best-Selling Products by Sales
plt.figure(figsize=(12, 6))
top_5_products_by_sales['Sales'].plot(kind='bar')
plt.title('Top 5 Best-Selling Products by Sales')
plt.xlabel('Product Name')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.show()

# Plot Top 5 Best-Selling Products by Quantity
plt.figure(figsize=(12, 6))
top_5_products_by_quantity['Quantity'].plot(kind='bar')
plt.title('Top 5 Best-Selling Products by Quantity')
plt.xlabel('Product Name')
plt.ylabel('Quantity Sold')
plt.xticks(rotation=45)
plt.show()

# Total Sales Calculation
total_sales = sales_data['Sales'].sum()

# Average Sales per Order
average_sales_per_order = sales_data['Sales'].mean()

# Total Profit Calculation
total_profit = sales_data['Profit'].sum()

# Print the computed revenue measures
print(f'Total Sales: ${total_sales:.2f}')
print(f'Average Sales per Order: ${average_sales_per_order:.2f}')
print(f'Total Profit: ${total_profit:.2f}')

# Prepare data for plotting
revenue_measures = {
    'Total Sales': total_sales,
    'Average Sales per Order': average_sales_per_order,
    'Total Profit': total_profit
}

# Plot the revenue measures
plt.figure(figsize=(10, 6))
plt.bar(revenue_measures.keys(), revenue_measures.values(), color=['blue', 'green', 'red'])
plt.title('Revenue Measures')
plt.xlabel('Measure')
plt.ylabel('Amount ($)')
plt.show()